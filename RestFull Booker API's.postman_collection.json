{
	"info": {
		"_postman_id": "47d422c0-b6f0-4c37-8577-43e674e4ffd3",
		"name": "RestFull Booker API's",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29950511",
		"_collection_link": "https://www.postman.com/phoenix-5643/workspace/restfull-booker/collection/29950511-47d422c0-b6f0-4c37-8577-43e674e4ffd3?action=share&source=collection_link&creator=29950511"
	},
	"item": [
		{
			"name": "Auth - CreateToken",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify the Staus Code is: 200\",function(){\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"pm.test(\"Verfiy the Content-Type: application/json\",function(){\r",
							"    pm.response.to.have.header(\"content-type\");\r",
							"    pm.expect( pm.response.headers.get(\"content-type\")).to.include(\"application/json\");\r",
							"})\r",
							"pm.test(\"Verify Responce Body is Not Null\",function(){\r",
							"    pm.expect(pm.response.json).to.have.not.eql(null)\r",
							"})\r",
							"pm.test(\"Verify Token Not Null\",function(){\r",
							"    pm.expect(pm.response.json.token).to.have.not.eql(null)\r",
							"})\r",
							"pm.test(\"Verify ResponcebTime Between :100 to 500ms\",function(){\r",
							"    pm.expect(pm.response.responseTime).to.be.within(100,500)\r",
							"})\r",
							"pm.test(\"Verify the token is undefined\",function(){\r",
							"    pm.expect(pm.response.json().token).to.not.be.undefined;\r",
							"})\r",
							"\r",
							"\r",
							"\r",
							"pm.collectionVariables.set(\"token\",pm.response.json().token);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"BaseUrl\",\"https://restful-booker.herokuapp.com\")\r",
							"pm.variables.set(\"Userid\",\"admin\")\r",
							"pm.variables.set(\"Password\",\"password123\")"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\" : \"{{Userid}}\",\r\n    \"password\" : \"{{Password}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseUrl}}/auth",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Auth - CreateToken Negative Testcase",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify the Staus Code is: 401\",function(){\r",
							"    pm.response.to.have.status(401)\r",
							"})\r",
							"\r",
							"pm.test(\"Verfiy the Content-Type: application/json\",function(){\r",
							"    pm.response.to.have.header(\"content-type\");\r",
							"    pm.expect( pm.response.headers.get(\"content-type\")).to.include(\"application/json\");\r",
							"})\r",
							"\r",
							"pm.test(\"Verify the Bad Request\",function(){\r",
							"    pm.expect(pm.response.json().reason).to.be.eql(\"Bad credentials\");\r",
							"})\r",
							"console.log(pm.response.json().reason)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.variables.set(\"Userid\",\"Inavid\");\r",
							"pm.variables.set(\"Password\",\"Invaliddd\")"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\" : \"{{Userid}}\",\r\n    \"password\" : \"{{Password}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseUrl}}/auth",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Booking - GetBookingIds",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify the Staus Code is: 200\",function(){\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"pm.test(\"Verify Responce Body is Not Null\",function(){\r",
							"    pm.expect(pm.response.json).to.have.not.eql(null)\r",
							"})\r",
							"pm.test(\"Verify Token Not Null\",function(){\r",
							"    pm.expect(pm.response.json.bookingid).to.have.not.eql(null)\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{BaseUrl}}/booking",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "Booking - GetBooking filter by names",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify the Staus Code is: 200\",function(){\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"pm.test(\"Verify Responce Body is Not Null\",function(){\r",
							"    pm.expect(pm.response.json).to.have.not.eql(null)\r",
							"})\r",
							"pm.test(\"Verify Token Not Null\",function(){\r",
							"    pm.expect(pm.response.json.bookingid).to.have.not.eql(null)\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.variables.set(\"firstname\",\"Sally\")\r",
							"pm.variables.set(\"lastname\",\"Brown\")"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{BaseUrl}}/booking?firstname={{firstname}}&lastname={{lastname}}",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"booking"
					],
					"query": [
						{
							"key": "firstname",
							"value": "{{firstname}}"
						},
						{
							"key": "lastname",
							"value": "{{lastname}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Booking - GetBooking filter by checkin and checkout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify the Staus Code is: 200\",function(){\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"pm.test(\"Verify Responce Body is Not Null\",function(){\r",
							"    pm.expect(pm.response.json).to.have.not.eql(null)\r",
							"})\r",
							"pm.test(\"Verify Token Not Null\",function(){\r",
							"    pm.expect(pm.response.json.bookingid).to.have.not.eql(null)\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.variables.set(\"checkout\",\"2014-03-13\")\r",
							"pm.variables.set(\"checkin\",\"2014-05-21\")"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{BaseUrl}}/booking?checkin={{checkin}}&checkout={{checkout}}",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"booking"
					],
					"query": [
						{
							"key": "checkin",
							"value": "{{checkin}}"
						},
						{
							"key": "checkout",
							"value": "{{checkout}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Booking - GetBooking filter by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify the Staus Code is: 200\",function(){\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"pm.test(\"Verify Responce Body is Not Null\",function(){\r",
							"    pm.expect(pm.response.json).to.have.not.eql(null)\r",
							"})\r",
							"pm.test(\"Verify Token Not Null\",function(){\r",
							"    pm.expect(pm.response.json.bookingid).to.have.not.eql(null)\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.variables.set(\"checkout\",\"2014-03-13\")\r",
							"pm.variables.set(\"checkin\",\"2014-05-21\")"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{BaseUrl}}/booking?checkin={{checkin}}&checkout={{checkout}}",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"booking"
					],
					"query": [
						{
							"key": "checkin",
							"value": "{{checkin}}"
						},
						{
							"key": "checkout",
							"value": "{{checkout}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Booking - CreateBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify the Staus Code is: 200\",function(){\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"pm.test(\"Verify Responce Body is Not Null\",function(){\r",
							"    pm.expect(pm.response.json).to.have.not.eql(null)\r",
							"})\r",
							"pm.test(\"Verify Token Not Null\",function(){\r",
							"    pm.expect(pm.response.json.bookingid).to.have.not.eql(null)\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"{{$randomFirstName}}\",\r\n    \"lastname\" : \"{{$randomLastName}}\",\r\n    \"totalprice\" : {{$randomInt}},\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"{{$randomDateFuture}}\",\r\n        \"checkout\" : \"{{$randomDateFuture}}\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseUrl}}/booking",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "Booking - UpdateBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify the Staus Code is: 200\",function(){\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"pm.test(\"Verify Responce Body is Not Null\",function(){\r",
							"    pm.expect(pm.response.json).to.have.not.eql(null)\r",
							"})\r",
							"pm.test(\"Verify Token Not Null\",function(){\r",
							"    pm.expect(pm.response.json.bookingid).to.have.not.eql(null)\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.variables.set(\"id\",\"1\")"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"{{$randomFirstName}}\",\r\n    \"lastname\" : \"{{$randomLastName}}\",\r\n    \"totalprice\" : {{$randomInt}},\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"{{$randomDateFuture}}\",\r\n        \"checkout\" : \"{{$randomDateFuture}}\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseUrl}}/booking/{{id}}",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Booking - PartialUpdateBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify the Staus Code is: 200\",function(){\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"pm.test(\"Verify Responce Body is Not Null\",function(){\r",
							"    pm.expect(pm.response.json).to.have.not.eql(null)\r",
							"})\r",
							"pm.test(\"Verify Token Not Null\",function(){\r",
							"    pm.expect(pm.response.json.bookingid).to.have.not.eql(null)\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.variables.set(\"id\",\"1\")"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"{{$randomFirstName}}\",\r\n    \"lastname\" : \"{{$randomLastName}}\",\r\n    \"totalprice\" : {{$randomInt}},\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"{{$randomDateFuture}}\",\r\n        \"checkout\" : \"{{$randomDateFuture}}\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseUrl}}/booking/{{id}}",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Booking - DeleteBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify the Staus Code is: 200\",function(){\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"pm.test(\"Verify Responce Body is Not Null\",function(){\r",
							"    pm.expect(pm.response.json).to.have.not.eql(null)\r",
							"})\r",
							"pm.test(\"Verify Token Not Null\",function(){\r",
							"    pm.expect(pm.response.json.bookingid).to.have.not.eql(null)\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.variables.set(\"id\",\"554\")"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseUrl}}/booking/{{id}}",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "BaseUrl",
			"value": ""
		},
		{
			"key": "token",
			"value": ""
		}
	]
}